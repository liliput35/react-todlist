{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","update","length","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAiFeA,E,kDA9Ed,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAM,CACTC,QAAS,GACTC,KAAM,IALQ,E,+CASjB,SAAYC,EAAKC,GACfC,KAAKC,SAAL,eACGH,EAAMC,M,qBAIX,WACE,IAAMH,EAAU,CACdM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAGtBR,EAAI,YAAOG,KAAKL,MAAME,MAC5BA,EAAKS,KAAKV,GAEVI,KAAKC,SAAS,CACZL,QAAS,GACTC,W,wBAIJ,SAAWK,GACT,IACMK,EADI,YAAOP,KAAKL,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CACZJ,KAAMU,M,oBAGT,WAAS,IAAD,OACFG,EAASV,KAAKL,MAAME,KAAKc,OAAS,GAAK,iCAC3C,OACE,sBAAKC,UAAU,YAAf,UACE,mCACE,mDAEA,sBAAKA,UAAU,OAAf,UACE,uBACAC,KAAK,OACLC,YAAY,WACZf,MAAOC,KAAKL,MAAMC,QAClBmB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOnB,UAEpD,wBAAQoB,QAAS,kBAAM,EAAKC,WAA5B,qBAKJ,oCACE,6BACGpB,KAAKL,MAAME,KAAKwB,KAAI,SAAAZ,GACnB,OACE,+BAAmBA,EAAKV,MACxB,wBAAQoB,QAAS,kBAAM,EAAKG,WAAWb,EAAKP,KAA5C,iBADSO,EAAKP,SAMpB,4BAAIQ,c,GApEGa,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5df2103e.chunk.js","sourcesContent":["import React from \"react\"\n\nclass App extends React.Component{\n constructor(props){\n   super(props)\n\n   this.state={\n     newItem: \"\", \n     list: [], \n   }\n }\n\n  updateInput(key, value){\n    this.setState({\n      [key]: value\n    })\n  }\n\n  addItem(){\n    const newItem = {\n      id: 1 + Math.random(), \n      value: this.state.newItem.slice()\n    }\n\n    const list = [...this.state.list]\n    list.push(newItem)\n\n    this.setState({\n      newItem: \"\", \n      list, \n    })\n  }\n\n  deleteItem(id){\n    const list = [...this.state.list]\n    const updatedList = list.filter(item => item.id !== id)\n\n    this.setState({\n      list: updatedList\n    })\n  }\n   render(){\n     let update = this.state.list.length ? '' : 'Nothing to do yet. Add an item'\n     return(\n       <div className=\"container\">\n         <header>\n           <h2>Ciocon's Todolist</h2>\n\n           <div className=\"form\">\n             <input \n             type=\"text\" \n             placeholder=\"Add Item\"\n             value={this.state.newItem}\n             onChange={e => this.updateInput(\"newItem\", e.target.value)}\n             />\n             <button onClick={() => this.addItem()}>\n               +\n             </button>\n           </div>\n         </header>\n         <section>\n           <ul>\n             {this.state.list.map(item => {\n               return(\n                 <li key={item.id}>{item.value}\n                 <button onClick={() => this.deleteItem(item.id)}>X</button>\n                 </li>\n               )\n             })}\n           </ul>\n           <p>{update}</p>\n         </section>\n       </div>\n     )\n   }\n \n}\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}